name: AzureDNSZone-v6.$(date:yy)$(DayOfYear).$(rev:r)-$(Build.SourceBranchName)
trigger:
- master
- issue*

pr:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: macOS-latest
      demands: npm
      workspace:
          clean: all

    steps:
    - task: VersionExtractor@4
      displayName: Version extractor digit
      name: buildExtractor
      inputs:
        stringToAnalyze: '$(build.buildNumber)'

    - task: TfxInstaller@2
      displayName: "Use Node CLI for Azure DevOps (tfx-cli): v0.6.x"
      inputs:
        version: 'v0.6.x'

    - task: Npm@1
      displayName: TypeScript Install
      inputs:
        command: 'custom'
        workingDir: 'aRecordManager'
        customCommand: 'install -g typescript'

    - task: Npm@1
      displayName: Build ARecordManager
      inputs:
        command: 'custom'
        workingDir: 'aRecordManager'
        customCommand: 'run publishExt'

    - task: Npm@1
      displayName: Build CNAMERecordManager
      inputs:
        command: 'custom'
        workingDir: 'cnameRecordManager'
        customCommand: 'run publishExt'

    - task: Npm@1
      displayName: Build TXTRecordManager
      inputs:
        command: 'custom'
        workingDir: 'txtRecordManager'
        customCommand: 'run publishExt'

    - task: PackageAzureDevOpsExtension@2
      displayName: Package Extension
      inputs:
        rootFolder: 
        extensionVersion: '$(buildExtractor.fullVersion)'
        updateTasksVersion: true

    - task: CopyFiles@2
      displayName: Copy *.vsix
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          *.vsix
          CurrentReleaseNotes.md
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: ExpertaPrivatePreview
  dependsOn: Build
  jobs:
  - deployment: DeployExtension
    pool:
      vmImage: macOS-latest
      demands: npm
    environment: ExpertaPrivatePreview
    strategy:
      runOnce:
        deploy:
          steps:
          - task: VersionExtractor@5
            name: build
            displayName: 'Version extractor digit'
            inputs:
              stringToAnalyze: '$(build.buildnumber)'
          - task: TfxInstaller@2
            displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'
          - task: PublishAzureDevOpsExtension@2
            displayName: 'Publish Extension'
            inputs:
              connectedServiceName: 'ExpertaSolutions Marketplace (Community)'
              fileType: vsix
              vsixFile: '$(Pipeline.Workspace)/drop/ExpertaPreview.AzureDnsZoneManager-*.vsix'
              publisherId: ExpertaPreview
              extensionId: pvAzDNSZone
              extensionName: 'Private Preview - Azure DNS zone manager'
              updateTasksVersion: false
              updateTasksId: true
              extensionVisibility: privatepreview
              extensionPricing: free
              shareWith: experta
          - task: GitHubRelease@1
            displayName: 'Create Draft Release Note'
            condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
            inputs:
              gitHubConnection: ExpertaSolutionsGitHub
              tagSource: userSpecifiedTag
              tag: '$(build.fullVersion)'
              title: '$(build.fullVersion)'
              releaseNotesFilePath: '$(PipelineWorkspace)/drop/CurrentReleaseNotes.md'
              isDraft: true
              addChangeLog: false

  - job: WaitForExtension
    dependsOn: DeployExtension
    pool: Server
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: '2'

  - deployment: LinuxAgentValidation
    dependsOn: WaitForExtension
    pool:
      vmImage: 'ubuntu-latest'
      demands: npm
    environment: LinuxAgentValidation
    strategy:
      runOnce:
        deploy:
          steps:
            - template: integration-testing.yml
              parameters:
                platformName: linux
                domainResourceGroup: expertadomain
                domainName: experta.ca
  - deployment: WindowsAgentValidation
    dependsOn: WaitForExtension
    pool:
      vmImage: windows-latest
      demands: npm
    environment: WindowsAgentValidation
    strategy:
      runOnce:
        deploy:
          steps:
            - template: integration-testing.yml
              parameters:
                platformName: windows
                domainResourceGroup: expertadomain
                domainName: experta.ca
  - deployment: macOSAgentValidation
    dependsOn: WaitForExtension
    pool:
      vmImage: macOS-latest
      demands: npm
    environment: macOSAgentValidation
    strategy:
      runOnce:
        deploy:
          steps:
            - template: integration-testing.yml
              parameters:
                platformName: macos
                domainResourceGroup: expertadomain
                domainName: experta.ca

- stage: ExpertaPrivate
  dependsOn: ExpertaPrivatePreview
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: DeployExtension
    pool:
      vmImage: macOS-latest
      demands: npm
    environment: ExpertaPrivate
    strategy:
      runOnce:
        deploy:
          steps:
          - task: VersionExtractor@5
            name: build
            displayName: 'Version extractor digit'
            inputs:
              stringToAnalyze: '$(build.buildnumber)'
          - task: TfxInstaller@2
            displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'
          - task: PublishAzureDevOpsExtension@2
            displayName: 'Publish Extension'
            inputs:
              connectedServiceName: 'ExpertaSolutions Marketplace (Community)'
              fileType: vsix
              vsixFile: '$(Pipeline.Workspace)/drop/ExpertaPreview.AzureDnsZoneManager-*.vsix'
              publisherId: ExpertaPreview
              extensionId: privateAzDNSZone
              extensionName: 'Private - Azure DNS zone manager'
              updateTasksVersion: false
              updateTasksId: true
              extensionVisibility: private
              extensionPricing: free
              shareWith: experta
          - task: GitHubRelease@1
            displayName: 'Update Draft to Pre-Release notes'
            inputs:
              gitHubConnection: ExpertaSolutionsGitHub
              action: edit
              tag: '$(build.fullVersion)'
              title: '$(build.fullVersion)'
              releaseNotesFilePath: '$(Pipeline.Workspace)/drop/CurrentReleaseNotes.md'
              isPreRelease: true
              addChangeLog: false

- stage: ExpertaPublicMarketplace
  dependsOn: ExpertaPrivate
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: DeployExtension
    pool:
      vmImage: macOS-latest
      demands: npm
    environment: ExpertaPublicMarketplace
    strategy:
      runOnce:
        deploy:
          steps:
          - task: VersionExtractor@5
            name: build
            displayName: 'Version extractor digit'
            inputs:
              stringToAnalyze: '$(build.buildnumber)'
          - task: TfxInstaller@2
            displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'
          - task: PublishAzureDevOpsExtension@2
            displayName: 'Publish Extension'
            inputs:
              connectedServiceName: 'ExpertaSolutions Marketplace (Community)'
              fileType: vsix
              vsixFile: '$(Pipeline.Workspace)/drop/ExpertaPreview.AzureDnsZoneManager-*.vsix'
              publisherId: experta
              updateTasksVersion: false
              extensionVisibility: public
              extensionPricing: free
          - task: GitHubRelease@1
            displayName: 'Update Pre-Release to Release notes'
            inputs:
              gitHubConnection: ExpertaSolutionsGitHub
              action: edit
              tag: '$(build.fullVersion)'
              title: '$(build.fullVersion)'
              releaseNotesFilePath: '$(Pipeline.Workspace)/drop/CurrentReleaseNotes.md'
              addChangeLog: false